name: CI/CD Pipeline with Docker

on:
  push:
    branches: [ develop ]  # develop 브랜치에 push 발생 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Create application.yml  # 🛠 application.yml 자동 생성
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
        shell: bash

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew bootJar

      - name: Build and push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t your-dockerhub-username/your-app:latest .
          docker push your-dockerhub-username/your-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            docker pull your-dockerhub-username/your-app:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d -p 8080:8080 --name my-app your-dockerhub-username/your-app:latest
          "
          
          rm -f private_key.pem  
